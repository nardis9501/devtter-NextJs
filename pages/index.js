import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import AppLayout from './componets/AppLayout'
import Button from './componets/Button'
import GitHubIcon from './componets/GitHubIcon'
import {loginWithGitHub}   from './firebase/client'
import { initializeApp } from 'firebase/app'
import { getAuth, signInWithPopup, GithubAuthProvider } from "firebase/auth"
import { useState } from 'react'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [user, setUser] = useState(null)
  const handleClick = () => {
    
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    const firebaseConfig = {
        apiKey: "AIzaSyD_7I3J5yvdk9Xilae3I9AVOV9s-pG8Fkg",
        authDomain: "devtter-f1bf5.firebaseapp.com",
        projectId: "devtter-f1bf5",
        storageBucket: "devtter-f1bf5.appspot.com",
        messagingSenderId: "20874292799",
        appId: "1:20874292799:web:6e1413341cb614f7ba128a",
        measurementId: "G-Z5WN7D70CC"
      };
    
      // Initialize Firebase V9
    const app = initializeApp(firebaseConfig);
    
    
    // Initialize Firebase Authentication and get a reference to the service
    const auth = getAuth();
    
    //Crea una instancia del objeto del proveedor de GitHub:
    const provider = new GithubAuthProvider();
    
      
        signInWithPopup(auth, provider).then((result) => {
        // This gives you a GitHub Access Token. You can use it to access the GitHub API.
        const credential = GithubAuthProvider.credentialFromResult(result);
        const token = credential.accessToken;
      
        // The signed-in user info.
        //const user = result.user;
        console.log(result);
        const avatar = result.user.photoURL;
        const userName = result.user.providerData[0].displayName;
        const email = result.user.email;
        const user = {userName, email , avatar};
        // console.log(user);
        setUser(user)
        console.log(user);
        // IdP data available using getAdditionalUserInfo(result)
        // ...
        }).catch((error) => {
        // Handle Errors here.
        const errorCode = error.code;
        const errorMessage = error.message;
        // The email of the user's account used.
        const email = error.customData.email;
        // The AuthCredential type that was used.
        const credential = GithubAuthProvider.credentialFromError(error);
        // ...
        });
         

  }
  return (
    <>
      <Head>
        <title>Devtter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppLayout>

        <section>
         <img src="/devter-logo.png" alt="Logo" />
          
          <h1>Devtter</h1>
          
          <h2>
            Talk about development <br/>with developers ðŸ‘¦ðŸ‘§
          </h2>
          
        </section>

        <Button onClick={handleClick}>
        <GitHubIcon fill='#fff' width={24} height={24} /> 
          Login with GitHub</Button>

        
        
        {/* This is a description and the footer */}
        <div className={styles.description}>
          <p>
          ðŸ‘¦ðŸ‘§ Talk about development with &nbsp;
            <code className={styles.code}>developers</code>
          </p>
          <div>
            <a
              href="https://github.com/nardis9501"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{' '}
              <Image
                src="/naryuri_icon.jpg"
                alt="NarYuri Logo"
                className={styles.vercelLogo}
                width={100}
                height={80}
                priority
              />
            </a>
          </div>
        </div>
      </AppLayout>
      <main className={styles.main}>

       

        
      </main>
    </>
  )
}
